#!/data/data/com.termux/files/usr/bin/bash

R="$(printf '\033[1;31m')"                           
G="$(printf '\033[1;32m')"
Y="$(printf '\033[1;33m')"
B="$(printf '\033[1;34m')"
C="$(printf '\033[1;36m')"                                       
W="$(printf '\033[1;37m')"
BOLD="$(printf '\033[1m')"

#########################################################################
############################### Shortcut Functions ######################
#########################################################################

function check_and_create_directory() {
    if [[ ! -d "$HOME/$1" ]]; then
        mkdir -p "$HOME/$1"
    fi
}

function check_and_delete() {
if [[ -e "$1" ]]; then
        rm -rf $1
    fi
}

function check_and_backup() {
	if [[ -e "$HOME/$1" ]]; then
	mv $HOME/$1 $HOME/${1}.bak
	mkdir -p "$HOME/$1"
    fi
}

function package_install_and_check() {
	packs_list=($@)
	for package_name in "${packs_list[@]}"; do
    echo "${R}[${W}-${R}]${G}${BOLD} Installing package: ${C}$package_name "${W}
    pkg install "$package_name" -y
	if [ $? -ne 0 ]; then
    apt --fix-broken install -y
	dpkg --Configuring -a
    fi
	if dpkg -s "$package_name" >/dev/null 2>&1; then
    echo "${R}[${W}-${R}]${G} $package_name installed successfully "${W}
	else
	if
    type -p "$package_name" &>/dev/null || [ -e "$PREFIX/bin/$package_name"* ] || [ -e "$PREFIX/bin/"*"$package_name" ]; then
        echo "${R}[${W}-${R}]${G} $package_name installed successfully "${W}
	fi
    fi
done

}

function get_file_name_number() {
    current_file=$(basename "$0")
    folder_name="${current_file%.sh}"
    theme_number=$(echo "$folder_name" | grep -oE '[1-9][0-9]*')
}

function download_and_extract() {
    local url="$1"
    local target_dir="$2"
    local filename="${url##*/}"

    echo "${C}${BOLD}Downloading ${G}${filename}..."${W}
    sleep 1.5

    cd "$target_dir" || return 1

    local attempt=1
    local success=false

    while [[ $attempt -le 3 ]]; do
        if [[ $filename == *.tar.gz ]]; then
            if curl -# -L "$url" -o "$filename"; then
                tar -zxvf "$filename"
                rm "$filename"
                success=true
                break
            fi
        elif [[ $filename == *.tar ]]; then
            if curl -# -L "$url" -o "$filename"; then
                tar -xvf "$filename"
                rm "$filename"
                success=true
                break
            fi
        elif [[ $filename == *.tar.xz ]]; then
            if curl -# -L "$url" -o "$filename"; then
                tar -xvf "$filename"
                rm "$filename"
                success=true
                break
            fi
        elif [[ $filename == *.zip ]]; then
            if curl -# -L "$url" -o "$filename"; then
                unzip "$filename"
                rm "$filename"
                success=true
                break
            fi
        fi

        echo "Failed to download ${filename}"
        echo "Retrying... Attempt $attempt"
        ((attempt++))
        sleep 1
    done

    if [[ "$success" = false ]]; then
        echo "Failed to download ${filename}"
        echo "Please check your internet connection"
    fi
}

function count_subfolders() {
    local owner="$1"
    local repo="$2"
    local path="$3"
    local url="https://api.github.com/repos/$owner/$repo/contents/$path"
    local response=$(curl -s "$url")
    local subfolder_count=$(echo "$response" | jq -r '.[] | select(.type == "dir") | .name' | wc -l)
    echo "$subfolder_count"
}

function confirmation_y_or_n() {
	 while true; do
        read -p "${R}[${W}-${R}]${Y}${BOLD} $1 ${Y}(y/n) "${W} response
        response="${response:-y}"
        eval "$2='$response'"
        case $response in
            [yY]* )
                echo "${R}[${W}-${R}]${G}Continuing with answer: $response"${W}
				sleep 0.3
                break;;
            [nN]* )
                echo "${R}[${W}-${R}]${C}Skipping this setp"${W}
				sleep 0.3
                break;;
            * )
               	echo "${R}[${W}-${R}]${R}Invalid input. Please enter 'y' or 'n'."${W}
                ;;
        esac
    done

}

function get_latest_release() {
	local repo_woner="$1"
	local repo_name="$2"
  curl -s "https://api.github.com/repos/$repo_woner/$repo_name/releases/latest" |
  grep '"tag_name":' |
  sed -E 's/.*"([^"]+)".*/\1/'
}

function select_option() {
	var_name="$1"
	read -p "${Y}select an option (Default 1): "${W} $var_name
	$var_name=${$var_name:-1}
	echo
	echo "${R}[${W}-${R}]${G}Continuing with answer: $var_name"${W}
	sleep 0.2
}

custom_theme="$PREFIX/etc/termux-desktop/custom_theme.txt"

function check_current_theme() {
    if [[ -f "$custom_theme" ]]; then
    current_applied_theme=$(<"$custom_theme")
    echo "${G} It look like your current applied theme is is: ${C} $current_applied_theme" ${W}
    else
    echo "${R} It look like you have not installed any styles yet" ${W}
    echo
    echo "${C} Please install the styles first" ${W}
    exit 0
    fi
}

#########################################################################
############################# Change Style ##############################
#########################################################################

function questions_theme_select() {
    local owner="sabamdarif"
    local repo="termux-desktop"
    local main_folder="patch/xfce"
    local subfolder_count_value=$(count_subfolders "$owner" "$repo" "$main_folder")
    wget -O styles.md https://raw.githubusercontent.com/sabamdarif/termux-desktop/main/xfce_styles.md
    if [[ -n "$subfolder_count_value" ]]; then
        echo "${R}[${W}-${R}]${G}Check the xfce styles section in github"${W}
		echo
		echo "${R}[${W}-${R}]${B}https://github.com/sabamdarif/termux-desktop/blob/main/xfce_styles.md"${W}
		echo
        echo "${R}[${W}-${R}]${B}Type The Number Crosponding To ${C}${current_applied_theme} To Reaplly / Fix It"${W}
		echo
        echo "${R}[${W}-${R}]${G}Available Styles:${W}"
        echo
        grep -oP '## \d+\..+?(?=(\n## \d+\.|\Z))' styles.md | while read -r style; do
        echo "${Y}${style#### }${W}"
        done
        while true; do
		    echo
            read -p "${R}[${W}-${R}]${Y}Type number of the style (Default 1): "${W} style_answer
            style_answer=${style_answer:-1}
            if [[ "$style_answer" -le "$subfolder_count_value" ]]; then
            style_name=$(grep -oP "^## $style_answer\..+?(?=(\n## \d+\.|\Z))" styles.md | sed -e "s/^## $style_answer\. //" -e "s/:$//")
                break
            else
                echo "${R}The entered style number is incorrect."${W}
				echo
                echo "${R}[${W}-${R}]${Y}Please enter a number between 0 to ${subfolder_count_value}"${W}
				echo
				echo "${R}[${W}-${R}]${G}Check the xfce styles section in github"${W}
				echo
				echo "${R}[${W}-${R}]${B}https://github.com/sabamdarif/termux-desktop/blob/main/xfce_styles.md"${W}
				echo
            fi
	done
    rm styles.md
    else
    echo "${R}Failed to get total avilable styles value."${W}
    fi
}

function check_and_get_icon_wallpaper_theme() {
    echo "${R}[${W}-${R}]${G}${BOLD}Configuring Icon Pack"${W}
    echo
    check_and_create_directory ".icons"
    download_and_extract "https://raw.githubusercontent.com/sabamdarif/termux-desktop/main/patch/xfce/look_${style_answer}/icon.tar.gz" "$HOME/.icons/"
    echo "${R}[${W}-${R}]${G}${BOLD}Configuring Themes Pack"${W}
    echo
    heck_and_create_directory ".themes"
    download_and_extract "https://raw.githubusercontent.com/sabamdarif/termux-desktop/main/patch/xfce/look_${style_answer}/icon.tar.gz" "$HOME/.themes/"
    echo "${R}[${W}-${R}]${G}${BOLD} Configuring Wallpapers..."${W}
	echo
	check_and_create_directory "$PREFIX/share/backgrounds/"
	download_and_extract "https://raw.githubusercontent.com/sabamdarif/termux-desktop/main/patch/xfce/look_${style_answer}/wallpaper.tar.gz" "$PREFIX/share/backgrounds/"
}

function additional_required_package_installler() {
    banner
    echo "${R}[${W}-${R}]${G}${BOLD} Installing Additional Packages If Required..."${W}
	echo
	if [[ "$style_answer" == "2" ]] || [[ "$style_answer" == "5" ]] || [[ "$style_answer" == "6" ]]; then
	package_install_and_check "cairo-dock-core"
	elif [[ "$style_answer" == "2" ]] || [[ "$style_answer" == "6" ]]; then
	package_install_and_check "rofi"
	elif [[ "$style_answer" == "2" ]]; then
	package_install_and_check "fluent-icon-theme vala-panel-appmenu"
	elif [[ "$style_answer" == "4" ]]; then
    package_install_and_check "gtk2-engines-murrine"
	elif [[ "$style_answer" == "5" ]] || [[ "$style_answer" == "6" ]]; then
	cp $HOME/.config/xpple_menu/applications/* $PREFIX/share/applications/
	else
	echo "${G} No Additional Packages Required For Theme: ${style_answer}"${W}
	sleep 1
	fi
}

function setup_config() {
    echo "${R}[${W}-${R}]${G}${BOLD}Configuring Style ${C} ${style_name}"${W}
    config_dirs=(autostart cairo-dock dconf gtk-3.0 Mousepad pulse Thunar menu ristretto rofi xfce4)
        for the_config_dir in "${config_dirs[@]}"; do
		check_and_delete ".config/$the_config_dir"
        done
    download_and_extract "https://raw.githubusercontent.com/sabamdarif/termux-desktop/main/patch/xfce/look_${style_answer}/config.tar.gz" "$HOME/.config/"
    echo "${style_name}" > $custom_theme
}

check_current_theme
questions_theme_select
if [[ "${style_answer}" == "0" ]];then
echo "${R}[${W}-${R}]${G}${BOLD}Configuring Style ${C} ${style_name}"${W}
    config_dirs=(autostart cairo-dock dconf gtk-3.0 Mousepad pulse Thunar menu ristretto rofi xfce4)
        for the_config_dir in "${config_dirs[@]}"; do
		check_and_delete ".config/$the_config_dir"
        done
        echo "Stock" > $custom_theme
else
check_and_get_icon_wallpaper_theme
additional_required_package_installler
setup_config
fi